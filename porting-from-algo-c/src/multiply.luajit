--
--	from src/multiply.c
--
--	unsigned multiply(unsigned, unsigned)	to	mulA, mulB, mulC
--

local floor = math.floor

local function mulA(a, b)
	local r = 0
	while a ~= 0 do
		if a % 2 == 1 then r = r + b end
		b, a = b * 2, floor(a / 2)
	end
	return r
end

local band, lshift, rshift = bit.band, bit.lshift, bit.rshift

local function mulB(a, b)
	local r = 0
	while a ~= 0 do
		if band(a,1) == 1 then r = r + b end
		b, a = lshift(b,1), rshift(a,1)
	end
	return r
end

local function mulC(a, b)
	function iter(a, b, r)
		return a ~= 0 and iter(rshift(a,1), lshift(b,1), band(a,1)==1 and r+b or r) or r
	end
	return iter(a, b, 0)
end

return {
	mulA = mulA,
	mulB = mulB,
	mulC = mulC
}
