--
--  _helper.luajit: some helper functions for toy scripts
--

--
-- >> LuaJIT is fully upwards-compatible with Lua 5.1. It supports all
-- >> standard Lua library functions and the full set of Lua/C API functions.
-- >> -- https://luajit.org/extensions.html
-- >>
-- >> math.abs (x)
-- >> Returns the absolute value of x.
-- >> -- https://www.lua.org/manual/5.1/manual.html#pdf-math.abs
--
-- > print(math.abs(0), math.abs(-0), math.abs(0.0), math.abs(-0.0))
-- 0       0       0       0
-- > print(type(math.abs(-0)), type(math.abs(-0.0)))
-- number  number
--
-- > print(("%d %f %g %a"):format(-0, -0, -0, -0))
-- 0 -0.000000 -0 -0x0p+0
-- > print(("%d %f %g %a"):format(-0.0, -0.0, -0.0, -0.0))
-- 0 -0.000000 -0 -0x0p+0
--
-- > ffi = require "ffi"
-- > ffi.cdef "long labs(long);"
-- > = ffi.C.labs(-0LL)
-- 0LL
--

--
--  load/return _helper.lua
--
local path = debug.getinfo(1).short_src:gsub("jit$", "")
return assert(loadfile(path))()
--
--  This method is for convenience only.
--  Perhaps there is a better/correct way to share the same code in Lua/LuaJIT.
--
