#
#  from src/combinat.c
#
#    int comb(int, int)                   to  combinationR
#    unsigned long combination(int, int)  to  combination
#
#  from src/stirling.c
#
#    int Stirling1(int, int)              to  stirling1
#    int Stirling2(int, int)              to  stirling2
#

function combinationR(n, k) {
	if (k == 0 || k == n) return 1
	if (k == 1) return n
	return combinationR(n - 1, k - 1) + combinationR(n - 1, k)
}

function combination(n, k,	a, i, j) {
	if (n - k < k) k = n - k

	if (k == 0) return 1
	if (k == 1) return n

	for (i = 1; i < k; i++)
		a[i] = i + 2

	for (i = 3; i <= n - k + 1; i++) {
		a[0] = i
		for (j = 1; j < k; j++) {
			a[j] += a[j - 1]
		}
	}

	return a[k - 1]
}

#

function stirling1(n, k) {
	if (k < 1 || k > n) return 0
	if (k == n) return 1
	return (n - 1) * stirling1(n - 1, k) + stirling1(n - 1, k - 1)
}

function stirling2(n, k) {
	if (k < 1 || k > n) return 0
	if (k == 1 || k == n) return 1
	return k * stirling2(n - 1, k) + stirling2(n - 1, k - 1)
}

#

#
#  rep(s,n) from _helper.awk
#

function pHeader(l, r, w0, w1,		padding, border, fmt, i) {
	padding = rep(" ", w0)
	border = rep(rep("-", w1), r - l + 1)
	fmt = "%" w1 "d"

	printf padding
	for (i = l; i <= r; i++) {
		printf fmt, i
	}
	print "\n" padding border
}

BEGIN {
	print "-------- combinationR (n:0-20, k:0-20)"
	pHeader(0, 20, 4, 8)
	for (n = 0; n <= 20; n++) {
		printf "%2d |", n
		for (k = 0; k <= n; k++) {
			printf "%8d", combinationR(n, k)
		}
		print
	}

	print "-------- combination (n:0-20, k:0-20)"
	pHeader(0, 20, 4, 8)
	for (n = 0; n <= 20; n++) {
		printf "%2d |", n
		for (k = 0; k <= n; k++) {
			printf "%8d", combination(n, k)
		}
		print
	}

#
#  the result of some edge/boundary values on my env (2025-09-07):
#
#    print "-------- combination (n:65-67, k:27-39)"
#    pHeader(65, 67, 4, 23)
#    for (k = 27; k <= 39; k++) {
#        printf "%2d |", k
#        for (n = 65; n <= 67; n++) {
#            printf "%23d", combination(n, k)
#        }
#        print
#    }
#
#  $ nawk -f src/_helper.awk -f src/combination.awk
#  ...
#                           65                     66                     67
#      ---------------------------------------------------------------------
#  27 |    1448194831602515456    2450791253481180160    4105075349580976640
#  28 |    1965407271460556800    3413602103063072256    5864393356544251904
#  29 |    2507588587725537792    4472995859186094592    7886597962249166848
#  30 |    3009106305270645248    5516694892996183040   -9223372036854775808
#  31 |    3397378086595890176    6406484391866535936   -9223372036854775808
#  32 |    3609714217008133120    7007092303604023296   -9223372036854775808
#  33 |    3609714217008133120    7219428434016266240   -9223372036854775808
#  34 |    3397378086595890176    7007092303604023296   -9223372036854775808
#  35 |    3009106305270645248    6406484391866535936   -9223372036854775808
#  36 |    2507588587725537792    5516694892996183040   -9223372036854775808
#  37 |    1965407271460556800    4472995859186094592   -9223372036854775808
#  38 |    1448194831602515456    3413602103063072256    7886597962249166848
#  39 |    1002596421878664448    2450791253481180160    5864393356544251904
#
#  $ mawk -f src/_helper.awk -f src/combination.awk
#  ...
#                           65                     66                     67
#      ---------------------------------------------------------------------
#  27 |    1448194831602515456    2450791253481180160    4105075349580976640
#  28 |    1965407271460556800    3413602103063072256    5864393356544251904
#  29 |    2507588587725537792    4472995859186094592    7886597962249166848
#  30 |    3009106305270645248    5516694892996183040    9989690752182278144
#  31 |    3397378086595890176    6406484391866535936   11923179284862717952
#  32 |    3609714217008133120    7007092303604023296   13413576695470559232
#  33 |    3609714217008133120    7219428434016266240   14226520737620289536
#  34 |    3397378086595890176    7007092303604023296   14226520737620289536
#  35 |    3009106305270645248    6406484391866535936   13413576695470559232
#  36 |    2507588587725537792    5516694892996183040   11923179284862717952
#  37 |    1965407271460556800    4472995859186094592    9989690752182278144
#  38 |    1448194831602515456    3413602103063072256    7886597962249166848
#  39 |    1002596421878664448    2450791253481180160    5864393356544251904
#
#  $ gawk -f src/_helper.awk -f src/combination.awk
#  ...
#                           65                     66                     67
#      ---------------------------------------------------------------------
#  27 |    1448194831602515456    2450791253481180160    4105075349580976640
#  28 |    1965407271460556800    3413602103063072256    5864393356544251904
#  29 |    2507588587725537792    4472995859186094592    7886597962249166848
#  30 |    3009106305270645248    5516694892996183040    9989690752182278144
#  31 |    3397378086595890176    6406484391866535936   11923179284862717952
#  32 |    3609714217008133120    7007092303604023296   13413576695470559232
#  33 |    3609714217008133120    7219428434016266240   14226520737620289536
#  34 |    3397378086595890176    7007092303604023296   14226520737620289536
#  35 |    3009106305270645248    6406484391866535936   13413576695470559232
#  36 |    2507588587725537792    5516694892996183040   11923179284862717952
#  37 |    1965407271460556800    4472995859186094592    9989690752182278144
#  38 |    1448194831602515456    3413602103063072256    7886597962249166848
#  39 |    1002596421878664448    2450791253481180160    5864393356544251904
#

	print "-------- Stirling numbers of the first kind:"
	pHeader(0, 10, 5, 8)
	for (n = 0; n <= 10; n++) {
		printf "%3d |", n
		for (k = 0; k <= n; k++) {
			printf "%8d", stirling1(n, k)
		}
		print
	}

	print "-------- Stirling numbers of the second kind:"
	pHeader(0, 10, 5, 8)
	for (n = 0; n <= 10; n++) {
		printf "%3d |", n
		for (k = 0; k <= n; k++) {
			printf "%8d", stirling2(n, k)
		}
		print
	}
}
