;
;	from src/acker.c
;
;	int A(int, int)		to	ack
;

(provide 'acker.s7)

(define (ack x y)
  (cond
    ((= x 0) (+ y 1))
    ((= y 0) (ack (- x 1) 1))
    (else (ack (- x 1) (ack x (- y 1))))))

(define (count-ack x y)
  (let ((c 0))
    (letrec ((a (lambda (x y)
                  (set! c (+ c 1))
                  (cond
                    ((= x 0) (+ y 1))
                    ((= y 0) (a (- x 1) 1))
                    (else (a (- x 1) (a x (- y 1))))))))
      (a x y))
    c))
